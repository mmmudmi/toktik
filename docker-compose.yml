version: '3'

services:
  frontend:
    build: 
      context: ./frontend
    networks:
      - ums-user-facing
    ports:
      - "7887:80"

  backend:
    build: 
      context: ./backend
      dockerfile: ./Dockerfile
    networks:
      - ums-user-facing
      - ums-back-office
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
    restart: always
  
  redis:
    image: redis
    restart: always
    command: redis-server --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    ports:
      - "6379:6379"
    networks:
      - ums-back-office

  preview_worker:
    image: preview_worker
    build:
      context: ./redis-queue/worker
      dockerfile: ./Preview/Dockerfile
    networks:
      - ums-back-office
  convertor_worker:
    image: convertor_worker
    build:
      context: ./redis-queue/worker
      dockerfile: ./Convertor/Dockerfile
    networks:
      - ums-back-office
  chunk_worker:
    image: chunk_worker
    build:
      context: ./redis-queue/worker
      dockerfile: ./Chunk/Dockerfile
    networks:
      - ums-back-office
 
  # proxy:
  #   image: nginx:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "7887:80"
  #   networks:
  #     - ums-user-facing
  #   depends_on:
  #     - frontend
  #     - backend
  #   volumes:
  #     - ./proxy/default.conf:/etc/nginx/conf.d/default.conf

networks:
  ums-user-facing:
  ums-back-office:
